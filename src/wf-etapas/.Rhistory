# Corrida general del Workflow Baseline
# limpio la memoria
rm(list = ls(all.names = TRUE)) # remove all objects
gc(full = TRUE, verbose= FALSE) # garbage collection
require("rlang")
require("yaml")
require("data.table")
if( !exists("envg") ) envg <- env()  # global environment
envg$EXPENV <- list()
envg$EXPENV$bucket_dir <- "~/buckets/b1"
envg$EXPENV$exp_dir <- "~/buckets/b1/expw/"
envg$EXPENV$wf_dir <- "~/buckets/b1/flow/"
envg$EXPENV$repo_dir <- "~/dmeyf2024/"
envg$EXPENV$datasets_dir <- "/mnt/storage/work/dmeyf/datasets/"
envg$EXPENV$messenger <- "~/install/zulip_enviar.sh"
envg$EXPENV$semilla_primigenia <- 168943
# leo el unico parametro del script
args <- commandArgs(trailingOnly=TRUE)
envg$EXPENV$scriptname <- args[1]
#------------------------------------------------------------------------------
# Error catching
options(error = function() {
traceback(20)
options(error = NULL)
cat(format(Sys.time(), "%Y%m%d %H%M%S"), "\n",
file = "z-Rabort.txt",
append = TRUE
)
stop("exiting after script error")
})
#------------------------------------------------------------------------------
# inicializaciones varias
dir.create( envg$EXPENV$exp_dir, showWarnings = FALSE)
dir.create( envg$EXPENV$wf_dir, showWarnings = FALSE)
#------------------------------------------------------------------------------
# cargo las  "librerias" mlog y exp_lib
mlog <- paste0( envg$EXPENV$repo_dir,"/src/lib/mlog.r")
source( mlog )
exp_lib <- paste0( envg$EXPENV$repo_dir,"/src/lib/exp_lib.r")
source( exp_lib )
DT_incorporar_dataset <- function( arch_dataset )
{
if( -1 == (param_local <- exp_init())$resultado ) return( 0 ) # linea fija
param_local$meta$script <- "/src/wf-etapas/z1101_DT_incorporar_dataset.r"
param_local$archivo_absoluto <- arch_dataset
param_local$primarykey <- c("numero_de_cliente", "foto_mes" )
param_local$entity_id <- c("numero_de_cliente" )
param_local$periodo <- c("foto_mes" )
param_local$clase <- c("clase_ternaria" )
param_local$semilla <- NULL  # no usa semilla, es deterministico
return( exp_correr_script( param_local ) ) # linea fija}
}
DT_incorporar_dataset( "~/mnt/storage/work/dmeyf/datasets/competencia_02.csv.gz")
DT_incorporar_dataset <- function( arch_dataset )
{
#  if( -1 == (param_local <- exp_init())$resultado ) return( 0 ) # linea fija
param_local$meta$script <- "/src/wf-etapas/z1101_DT_incorporar_dataset.r"
param_local$archivo_absoluto <- arch_dataset
param_local$primarykey <- c("numero_de_cliente", "foto_mes" )
param_local$entity_id <- c("numero_de_cliente" )
param_local$periodo <- c("foto_mes" )
param_local$clase <- c("clase_ternaria" )
param_local$semilla <- NULL  # no usa semilla, es deterministico
return( exp_correr_script( param_local ) ) # linea fija}
}
DT_incorporar_dataset( "~/mnt/storage/work/dmeyf/datasets/competencia_02.csv.gz")
# Corrida general del Workflow Baseline
# limpio la memoria
rm(list = ls(all.names = TRUE)) # remove all objects
gc(full = TRUE, verbose= FALSE) # garbage collection
require("rlang")
require("yaml")
require("data.table")
if( !exists("envg") ) envg <- env()  # global environment
envg$EXPENV <- list()
envg$EXPENV$bucket_dir <- "/mnt/storage/work/dmeyf"
envg$EXPENV$exp_dir <- "/mnt/storage/work/dmeyf/expw/"
envg$EXPENV$wf_dir <- "/mnt/storage/work/dmeyf/flow/"
envg$EXPENV$repo_dir <- "/mnt/storage/work/dmeyf/dmeyf2024/"
envg$EXPENV$datasets_dir <- "/mnt/storage/work/dmeyf/datasets/"
envg$EXPENV$messenger <- "~/install/zulip_enviar.sh"
envg$EXPENV$semilla_primigenia <- 168943
# leo el unico parametro del script
args <- commandArgs(trailingOnly=TRUE)
envg$EXPENV$scriptname <- args[1]
#------------------------------------------------------------------------------
# Error catching
options(error = function() {
traceback(20)
options(error = NULL)
cat(format(Sys.time(), "%Y%m%d %H%M%S"), "\n",
file = "z-Rabort.txt",
append = TRUE
)
stop("exiting after script error")
})
#------------------------------------------------------------------------------
# inicializaciones varias
dir.create( envg$EXPENV$exp_dir, showWarnings = FALSE)
dir.create( envg$EXPENV$wf_dir, showWarnings = FALSE)
#------------------------------------------------------------------------------
# cargo las  "librerias" mlog y exp_lib
mlog <- paste0( envg$EXPENV$repo_dir,"/src/lib/mlog.r")
source( mlog )
exp_lib <- paste0( envg$EXPENV$repo_dir,"/src/lib/exp_lib.r")
source( exp_lib )
#------------------------------------------------------------------------------
# Incorporacion Dataset
# deterministico, SIN random
DT_incorporar_dataset <- function( arch_dataset )
{
if( -1 == (param_local <- exp_init())$resultado ) return( 0 ) # linea fija
param_local$meta$script <- "/src/wf-etapas/z1101_DT_incorporar_dataset.r"
param_local$archivo_absoluto <- arch_dataset
param_local$primarykey <- c("numero_de_cliente", "foto_mes" )
param_local$entity_id <- c("numero_de_cliente" )
param_local$periodo <- c("foto_mes" )
param_local$clase <- c("clase_ternaria" )
param_local$semilla <- NULL  # no usa semilla, es deterministico
return( exp_correr_script( param_local ) ) # linea fija}
}
DT_incorporar_dataset( "~/mnt/storage/work/dmeyf/datasets/competencia_02.csv.gz")
dataset <- fread(/mnt/storage/work/dmeyf/datasets/competencia_02.csv.gz)
dataset <- fread("/mnt/storage/work/dmeyf/datasets/competencia_02.csv.gz")
dataset <- fread("/mnt/storage/work/dmeyf/datasets/dataset.csv.gz")
dataset.DefaultView.ToTable(true, "periodo")
unique(dataset$foto_mes)
